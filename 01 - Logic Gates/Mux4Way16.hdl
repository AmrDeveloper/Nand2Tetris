// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a = a[0], b = c[0], sel = sel[1], out = result00);
    Mux(a = b[0], b = d[0], sel = sel[1], out = result01);
    Mux(a = result00, b = result01, sel = sel[0], out = out[0]);

    Mux(a = a[1], b = c[1], sel = sel[1], out = result10);
    Mux(a = b[1], b = d[1], sel = sel[1], out = result11);
    Mux(a = result10, b = result11, sel = sel[0], out = out[1]);

    Mux(a = a[2], b = c[2], sel = sel[1], out = result20);
    Mux(a = b[2], b = d[2], sel = sel[1], out = result21);
    Mux(a = result20, b = result21, sel = sel[0], out = out[2]);

    Mux(a = a[3], b = c[3], sel = sel[1], out = result30);
    Mux(a = b[3], b = d[3], sel = sel[1], out = result31);
    Mux(a = result30, b = result31, sel = sel[0], out = out[3]);

    Mux(a = a[4], b = c[4], sel = sel[1], out = result40);
    Mux(a = b[4], b = d[4], sel = sel[1], out = result41);
    Mux(a = result40, b = result41, sel = sel[0], out = out[4]);

    Mux(a = a[5], b = c[5], sel = sel[1], out = result50);
    Mux(a = b[5], b = d[5], sel = sel[1], out = result51);
    Mux(a = result50, b = result51, sel = sel[0], out = out[5]);

    Mux(a = a[6], b = c[6], sel = sel[1], out = result60);
    Mux(a = b[6], b = d[6], sel = sel[1], out = result61);
    Mux(a = result60, b = result61, sel = sel[0], out = out[6]);

    Mux(a = a[7], b = c[7], sel = sel[1], out = result70);
    Mux(a = b[7], b = d[7], sel = sel[1], out = result71);
    Mux(a = result70, b = result71, sel = sel[0], out = out[7]);

    Mux(a = a[8], b = c[8], sel = sel[1], out = result80);
    Mux(a = b[8], b = d[8], sel = sel[1], out = result81);
    Mux(a = result80, b = result81, sel = sel[0], out = out[8]);

    Mux(a = a[9], b = c[9], sel = sel[1], out = result90);
    Mux(a = b[9], b = d[9], sel = sel[1], out = result91);
    Mux(a = result90, b = result91, sel = sel[0], out = out[9]);

    Mux(a = a[10], b = c[10], sel = sel[1], out = result100);
    Mux(a = b[10], b = d[10], sel = sel[1], out = result101);
    Mux(a = result100, b = result101, sel = sel[0], out = out[10]);

    Mux(a = a[11], b = c[11], sel = sel[1], out = result200);
    Mux(a = b[11], b = d[11], sel = sel[1], out = result201);
    Mux(a = result200, b = result201, sel = sel[0], out = out[11]);

    Mux(a = a[12], b = c[12], sel = sel[1], out = result300);
    Mux(a = b[12], b = d[12], sel = sel[1], out = result301);
    Mux(a = result300, b = result301, sel = sel[0], out = out[12]);

    Mux(a = a[13], b = c[13], sel = sel[1], out = result400);
    Mux(a = b[13], b = d[13], sel = sel[1], out = result401);
    Mux(a = result400, b = result401, sel = sel[0], out = out[13]);

    Mux(a = a[14], b = c[14], sel = sel[1], out = result500);
    Mux(a = b[14], b = d[14], sel = sel[1], out = result501);
    Mux(a = result500, b = result501, sel = sel[0], out = out[14]);

    Mux(a = a[15], b = c[15], sel = sel[1], out = result600);
    Mux(a = b[15], b = d[15], sel = sel[1], out = result601);
    Mux(a = result600, b = result601, sel = sel[0], out = out[15]);
}