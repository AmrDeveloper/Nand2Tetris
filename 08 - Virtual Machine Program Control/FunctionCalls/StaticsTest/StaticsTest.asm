//Bootstrap code
@256
D=A
@SP
M=D
//Call command for Sys.init
@return_address_Sys.init_0_0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@0
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(return_address_Sys.init_0_0)
//Function command for Sys.init
(Sys.init)
//Push constant
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Push constant
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call command for Class1.set
@return_address_Class1.set_2_1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@2
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(return_address_Class1.set_2_1)
@SP
AM=M-1
D=M
@5
M=D
//Push constant
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//Push constant
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call command for Class2.set
@return_address_Class2.set_2_2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@2
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(return_address_Class2.set_2_2)
@SP
AM=M-1
D=M
@5
M=D
//Call command for Class1.get
@return_address_Class1.get_0_3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@0
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(return_address_Class1.get_0_3)
//Call command for Class2.get
@return_address_Class2.get_0_4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@0
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(return_address_Class2.get_0_4)
//Label WHILE
(WHILE)
//Go to WHILE
@WHILE
0;JMP
//Function command for Class1.set
(Class1.set)
//Push Argument
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop Static
@SP
M=M-1
@SP
A=M
D=M
@Class1.vm_0
M=D
//Push Argument
@ARG
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop Static
@SP
M=M-1
@SP
A=M
D=M
@Class1.vm_1
M=D
//Push constant
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Return Command
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
A=D-A
D=M
@ret_addr
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@endFrame
D=M
@2
A=D-A
D=M
@THIS
M=D
@endFrame
D=M
@3
A=D-A
D=M
@ARG
M=D
@endFrame
D=M
@4
A=D-A
D=M
@LCL
M=D
@ret_addr
A=M
0;JMP
//Function command for Class1.get
(Class1.get)
//Push Static
@Class1.vm_0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Push Static
@Class1.vm_1
D=M
@SP
A=M
M=D
@SP
M=M+1
//Sub Command
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
A=M
D=A-D
@SP
A=M
M=D
@SP
M=M+1
//Return Command
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
A=D-A
D=M
@ret_addr
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@endFrame
D=M
@2
A=D-A
D=M
@THIS
M=D
@endFrame
D=M
@3
A=D-A
D=M
@ARG
M=D
@endFrame
D=M
@4
A=D-A
D=M
@LCL
M=D
@ret_addr
A=M
0;JMP
//Function command for Class2.set
(Class2.set)
//Push Argument
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop Static
@SP
M=M-1
@SP
A=M
D=M
@Class2.vm_0
M=D
//Push Argument
@ARG
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop Static
@SP
M=M-1
@SP
A=M
D=M
@Class2.vm_1
M=D
//Push constant
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Return Command
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
A=D-A
D=M
@ret_addr
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@endFrame
D=M
@2
A=D-A
D=M
@THIS
M=D
@endFrame
D=M
@3
A=D-A
D=M
@ARG
M=D
@endFrame
D=M
@4
A=D-A
D=M
@LCL
M=D
@ret_addr
A=M
0;JMP
//Function command for Class2.get
(Class2.get)
//Push Static
@Class2.vm_0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Push Static
@Class2.vm_1
D=M
@SP
A=M
M=D
@SP
M=M+1
//Sub Command
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
A=M
D=A-D
@SP
A=M
M=D
@SP
M=M+1
//Return Command
@LCL
D=M
@endFrame
M=D
@endFrame
D=M
@5
A=D-A
D=M
@ret_addr
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@endFrame
D=M
@2
A=D-A
D=M
@THIS
M=D
@endFrame
D=M
@3
A=D-A
D=M
@ARG
M=D
@endFrame
D=M
@4
A=D-A
D=M
@LCL
M=D
@ret_addr
A=M
0;JMP